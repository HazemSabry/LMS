:root {
    --num-of-welcome-page-image: 12;
    --num-of-gaps-between-welcome-page-image: calc(var(--num-of-welcome-page-image) - 1);
    --welcome-page-image-dimension: calc(150px * var(--screen-scale));
    --welcome-page-image-gap: calc(1rem * var(--screen-scale));
    --welcome-page-note-text-color: #948CA0;
    --welcome-page-logo-dimensions: calc(8rem * var(--screen-scale));
    --welcome-page-image-animation-duration: 60s;
}

/*********************************************************************************** Welcome Page > animation-screen****************************************************************************************/
/**
 * @author Hazem Sabry 
 * @email hazemsabry20002@gmail.com
 * This CSS block is responsible for setting the width of the animation-screen element to 100% of the viewport width.
 *
 * The animation-screen element is a container for the welcome page's animation and content.
 *
 * This CSS rule ensures that the animation-screen element takes up the full width of the viewport, allowing the welcome page's content to be displayed consistently across different screen sizes.
 */
body>.animation-screen{
    width: 100vw;
}

/**
 * @author Hazem Sabry 
 * @email hazemsabry20002@gmail.com
 * This CSS block defines the properties of the row element within the animation-screen.
 * It sets the display to flex, gap to the welcome-page-image-gap variable, padding to half the welcome-page-image-gap, height to the sum of the welcome-page-image-dimension and the welcome-page-image-gap, width to 100vw, overflow to hidden, and position to relative.
 */
body > .animation-screen > .row{
    display: flex;
    gap: var(--welcome-page-image-gap);
    padding: calc(var(--welcome-page-image-gap) * 0.5) 0;
    height: calc(var(--welcome-page-image-dimension) + (var(--welcome-page-image-gap)));
    width: 100vw;
    overflow: hidden;
    position: relative;
}

/**
 * @author Hazem Sabry 
 * @email hazemsabry20002@gmail.com
 * This CSS block is responsible for setting the properties of the image element within the row element of the animation-screen.
 * It sets the minimum and maximum width and height of the image to be equal to the welcome-page-image-dimension variable,
 * sets the background color of the image container, adds a border radius, and sets the image to overflow hidden.
 * The display property is set to flex, and the align-items property is set to flex-end, positioning the image at the bottom of its container.
 * The position property is set to absolute, allowing the image to be positioned relative to its closest positioned ancestor.
 */
body > .animation-screen > .row > .image {
    min-width: var(--welcome-page-image-dimension);
    min-height: var(--welcome-page-image-dimension);
    max-width: var(--welcome-page-image-dimension);
    max-height: var(--welcome-page-image-dimension);
    background-color: var(--welcome-page-image-background-color);
    border-radius: 25px;
    overflow: hidden;
    display: flex;
    align-items: flex-end;
    position: absolute;
}

/**
 * @author Hazem Sabry 
 * @email hazemsabry20002@gmail.com
 * This CSS block is responsible for setting the width and height of the image element within the row element of the animation-screen.
 * It sets the minimum and maximum width and height of the image to be equal to the welcome-page-image-dimension variable,
 * which is a variable defined in the root of the CSS file.
 * The purpose of this is to ensure that the images displayed in the welcome page have a consistent size, regardless of their aspect ratio.
 * The display property is not set to anything, as it is already set to flex in the parent row element.
 */
body>.animation-screen>.row>.image>img{
    min-width: var(--welcome-page-image-dimension);
    min-height: var(--welcome-page-image-dimension);
    max-width: var(--welcome-page-image-dimension);
    max-height: var(--welcome-page-image-dimension);
}

/**
 * @author Hazem Sabry 
 * @email hazemsabry20002@gmail.com
 * This CSS block defines the animation for the scroll-left and scroll-right classes.
 * The animation property sets the name of the animation, the duration of the animation, the timing function, and whether the animation should repeat indefinitely.
 */
body>.animation-screen>.row>.scroll-left{
    animation: scrollLeft var(--welcome-page-image-animation-duration) linear infinite;
}

body>.animation-screen>.row>.scroll-right{
    animation: scrollRight var(--welcome-page-image-animation-duration) linear infinite;
}

/**
 * @author Hazem Sabry 
 * @email hazemsabry20002@gmail.com
 * This keyframe block defines the animation for the scroll-left class.
 * The from and to properties set the starting and ending positions of the animation.
 */
@keyframes scrollLeft {
    from{
        transform:translateX(0);
    }

    to{
        transform: translateX(calc(-1 * (var(--welcome-page-image-gap) * var(--num-of-gaps-between-welcome-page-image) + var(--welcome-page-image-dimension) * var(--num-of-welcome-page-image))));
    }
}

/**
 * @author Hazem Sabry 
 * @email hazemsabry20002@gmail.com
 * This keyframe block defines the animation for the scroll-right class.
 * The from and to properties set the starting and ending positions of the animation.
 */
@keyframes scrollRight {
    from {
        transform: translateX(0);
    }

    to {
        transform: translateX(calc((var(--welcome-page-image-gap) * var(--num-of-gaps-between-welcome-page-image) + var(--welcome-page-image-dimension) * var(--num-of-welcome-page-image))));
    }
}

/**************************************************************************** Welcome Page> information-section ******************************************************************************/
/**
 * @author Hazem Sabry 
 * @email hazemsabry20002@gmail.com
 * This CSS block is responsible for setting the properties of the information-section element within the welcome page.
 * It sets the width to 100vw, positioning it relative to the viewport, and adjusting its top position based on the welcome-page-logo-dimensions variable.
 * The .logo class within this section contains the logo image and its variations.
 */
body > .information-section {
    width: 100vw;
    position: relative;
    top: calc(var(--welcome-page-logo-dimensions) * -0.4);
}

/**
 * @author Hazem Sabry 
 * @email hazemsabry20002@gmail.com
 * This CSS block defines the properties of the logo element within the information-section.
 * It sets the background color, border radius, width, and height to the welcome-page-logo-dimensions variable.
 * The logo is positioned relative to its closest positioned ancestor and centered using the translateX function.
 */
body > .information-section > .logo {
    background-color: var(--logo-background-color);
    border-radius: 50%;
    width: var(--welcome-page-logo-dimensions);
    height: var(--welcome-page-logo-dimensions);
    position: relative;
    left: 50%;
    transform: translateX(-50%);
}

/**
 * @author Hazem Sabry 
 * @email hazemsabry20002@gmail.com
 * This CSS block defines the properties of the center-rectangular and center-triangular elements within the logo.
 * They are positioned absolutely within the logo and have their own background colors, widths, and heights.
 * The center-rectangular element has a polygon clip-path, while the center-triangular element has a different clip-path.
 */
body > .information-section > .logo > .center-rectangular {
    position: absolute;
    background-color: var(--logo-prim-color);
    width: var(--welcome-page-logo-dimensions);
    height: var(--welcome-page-logo-dimensions);
    clip-path: polygon(15% 15%, 85% 15%, 85% 85%, 15% 85%);
}

body > .information-section > .logo > .center-triangular {
    position: absolute;
    background-color: var(--logo-center-color);
    width: var(--welcome-page-logo-dimensions);
    height: var(--welcome-page-logo-dimensions);
    clip-path: polygon(15% 15%, 50% 85%, 85% 15%);
}

/**
 * @author Hazem Sabry 
 * @email hazemsabry20002@gmail.com
 * This CSS block defines the properties of the logo-title, welcome-page-title, and welcome-page-note-title elements within the information-section.
 * They are positioned relative and centered using the translateX function.
 * The welcome-page-title and welcome-page-note-title elements have different font sizes and colors.
 */
body > .information-section> .logo-title,
body>.information-section>.welcome-page-title {
    width: fit-content;
    position: relative;
    left: calc(50% - var(--font-size) * 3);
    font-size: calc(var(--font-size) * 2);
    padding: calc(var(--font-size));
}

body>.information-section>.welcome-page-title{
    left: 50% ;
    width: fit-content;
    transform: translateX(-50%);
    padding: calc(var(--font-size) * 0.5);
    padding: 0 10vw;
    text-align: center;
}

body>.information-section>.welcome-page-note-title {
    position: relative;
    font-size: calc(var(--font-size)*1.3);
    left:50%;
    width: fit-content;
    transform: translateX(-50%);
    color: var(--welcome-page-note-text-color);
    padding: 0 10vw;
    text-align: center;
}

/**
 * @author Hazem Sabry 
 * @email hazemsabry20002@gmail.com
 * This CSS block defines the properties of the welcome-page-buttons element, which contains the login and create-account buttons.
 * It sets the display to flex, flex-wrap to wrap, gap to 1rem, min-width to 31rem, width to 40vw, position to relative, left to 50vw, and transform to translateX(-50%).
 * The buttons are styled with a font-size of calc(var(--font-size)*1.3), a min-width of 15rem, a width of calc(50% - 0.5rem), padding of 0.5rem, border-radius of 50px, cursor of pointer, and a border of 1px solid var(--btn-color).
 * The login button has a background-color of var(--btn-color) and a color of var(--background-color).
 * The create-account button has a color of var(--btn-color) and a background-color of var(--background-color).
 * The login and create-account buttons are styled to change their brightness to 0.9 on hover and to 0.8 on active click.
 */
body>.welcome-page-buttons{
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    min-width: 31rem;
    width: 40vw;
    position: relative;
    left: 50vw;
    transform: translateX(-50%);
}

body>.welcome-page-buttons>.login,
body>.welcome-page-buttons>.create-account{
    font-size: calc(var(--font-size)*1.3);
    min-width: 15rem;
    width: calc(50% - 0.5rem);
    padding: 0.5rem;;
    border-radius:50px ;
    cursor: pointer;
    border: 1px solid var(--btn-color);
}

body>.welcome-page-buttons > .login{
    background-color: var(--btn-color);
    color: var(--background-color);
}

body>.welcome-page-buttons>.create-account {
    color: var(--btn-color);
    background-color: var(--background-color);
}

body>.welcome-page-buttons>.login:hover,
body>.welcome-page-buttons>.create-account:hover{
    filter: brightness(0.9);
}

body>.welcome-page-buttons>.login:active,
body>.welcome-page-buttons>.create-account:active {
    filter: brightness(0.8);
}

/********************************************************************************** laptop screens media query styles ******************************************************************************/
/**
 * @author Hazem Sabry 
 * @email hazemsabry20002@gmail.com
 * This CSS block is a media query that applies styles when the screen width is 700px or less.
 * It adjusts the line height, button spacing, and positioning of the welcome page buttons for smaller screens.
 */
@media screen and (max-Width: 700px ) {
    html {
        /**
         * This line sets the line height of the HTML element to 1.8rem, which helps maintain readability and spacing on smaller screens.
         */
        line-height: 1.8rem;
    }

    body>.welcome-page-buttons {
        /**
         * This line sets the gap between the welcome page buttons to 1rem, providing some spacing between them.
         */
        gap: 1rem;

        /**
         * This line sets the minimum and maximum width of the welcome page buttons container to 80vw, ensuring that it takes up most of the available width on smaller screens.
         */
        min-width: 80vw;
        width: 80vw;
    }

    body>.welcome-page-buttons > .login,
    body>.welcome-page-buttons > .create-account {
        /**
         * This line sets the minimum and maximum width of the login and create-account buttons to 80vw, ensuring that they take up most of the available width on smaller screens.
         */
        min-width: 80vw;
        width: 80vw;

        /**
         * This line sets the padding of the login and create-account buttons to 0.5rem, providing some space around the button text.
         */
        padding: 0.5rem;
    }

    body>.welcome-page-buttons {
        /**
         * This line sets the position of the welcome page buttons container to relative, allowing it to be positioned using the top property.
         */
        position: relative;

        /**
         * This line sets the top position of the welcome page buttons container to be 0.2 times the value of --welcome-page-logo-dimensions, adjusting its position based on the logo size.
         */
        top: calc(var(--welcome-page-logo-dimensions) * -0.2);
    }
}